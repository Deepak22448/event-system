// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @map("user_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  name                String?
  email               String?   @unique
  image               String    @default("/images/empty_avatar.jpeg")
  password            String?
  accounts            Account[]
  registeredEvents    Event[]   @relation(fields: [registeredEventsIds], references: [id], name: "attende")
  registeredEventsIds String[]  @db.ObjectId
  createdEvents       Event[]

  @@map("users")
}

model Event {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  date             String
  time             String
  venu             String
  eventDescription String?
  attendees        User[]   @relation(fields: [attendeesIds], references: [id], name: "attende")
  attendeesIds     String[] @db.ObjectId
  creator          User     @relation(fields: [creatorId], references: [id])
  creatorId        String   @db.ObjectId

  @@map("events")
}
